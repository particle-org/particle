package com.particle.game.block.drops;

import com.particle.core.ecs.module.ECSModuleHandler;
import com.particle.game.block.drops.data.*;
import com.particle.model.block.Block;
import com.particle.model.block.types.BlockPrototype;
import com.particle.model.item.ItemStack;
import com.particle.model.item.types.ItemPrototype;

import javax.inject.Inject;
import javax.inject.Singleton;
import java.util.LinkedList;
import java.util.List;

@Singleton
public class BlockDropService {

    private static final ECSModuleHandler<BlockDropModule> BLOCK_DROP_MODULE_HANDLER = ECSModuleHandler.buildHandler(BlockDropModule.class);

    @Inject
    public void init() {
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.AIR.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STONE.getBindGameObject()).update(new BlockDrop(ItemPrototype.STONE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GRASS.getBindGameObject()).update(new BlockDrop(ItemPrototype.DIRT, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DIRT.getBindGameObject()).update(new BlockDrop(ItemPrototype.DIRT, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.COBBLESTONE.getBindGameObject()).update(new BlockDrop(ItemPrototype.COBBLESTONE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PLANKS.getBindGameObject()).update(new BlockDrop(ItemPrototype.PLANKS, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SAPLING.getBindGameObject()).update(new BlockDropWithMeta(ItemPrototype.SAPLING, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BEDROCK.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.FLOWING_WATER.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.WATER.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.FLOWING_LAVA.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LAVA.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SAND.getBindGameObject()).update(new BlockDrop(ItemPrototype.SAND, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GRAVEL.getBindGameObject()).update(new BlockDrop(ItemPrototype.GRAVEL, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GOLD_ORE.getBindGameObject()).update(new BlockDrop(ItemPrototype.GOLD_ORE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.IRON_ORE.getBindGameObject()).update(new BlockDrop(ItemPrototype.IRON_ORE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.COAL_ORE.getBindGameObject()).update(new BlockDrop(ItemPrototype.COAL, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LOG.getBindGameObject()).update(new BlockDrop(ItemPrototype.LOG, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LEAVES.getBindGameObject()).update(new BlockProbabilityDrop(ItemPrototype.SAPLING, 0.1, -1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SPONGE.getBindGameObject()).update(new BlockDrop(ItemPrototype.SPONGE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GLASS.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LAPIS_ORE.getBindGameObject()).update(new BlockRangeDrop(ItemPrototype.DYE, 4, 4, 8), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LAPIS_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.LAPIS_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DISPENSER.getBindGameObject()).update(new BlockDrop(ItemPrototype.DISPENSER, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SANDSTONE.getBindGameObject()).update(new BlockDrop(ItemPrototype.SANDSTONE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.NOTEBLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.NOTEBLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BED.getBindGameObject()).update(new BlockDrop(ItemPrototype.BED, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GOLDEN_RAIL.getBindGameObject()).update(new BlockDrop(ItemPrototype.GOLDEN_RAIL, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DETECTOR_RAIL.getBindGameObject()).update(new BlockDrop(ItemPrototype.DETECTOR_RAIL, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STICKY_PISTON.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.WEB.getBindGameObject()).update(new BlockDrop(ItemPrototype.STRING, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.TALLGRASS.getBindGameObject()).update(new BlockProbabilityDrop(ItemPrototype.WHEAT_SEEDS, 0.1, 0), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DEADBUSH.getBindGameObject()).update(new BlockRangeDrop(ItemPrototype.DEADBUSH, 0, 2), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PISTON.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PISTONARMCOLLISION.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.WOOL.getBindGameObject()).update(new BlockDrop(ItemPrototype.WOOL, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_0.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.YELLOW_FLOWER.getBindGameObject()).update(new BlockDropWithMeta(ItemPrototype.YELLOW_FLOWER, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.RED_FLOWER.getBindGameObject()).update(new BlockDropWithMeta(ItemPrototype.RED_FLOWER, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BROWN_MUSHROOM.getBindGameObject()).update(new BlockDrop(ItemPrototype.BROWN_MUSHROOM, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.RED_MUSHROOM.getBindGameObject()).update(new BlockDrop(ItemPrototype.RED_MUSHROOM, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GOLD_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.GOLD_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.IRON_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.IRON_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DOUBLE_STONE_SLAB.getBindGameObject()).update(new BlockDrop(ItemPrototype.STONE_SLAB, 2), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STONE_SLAB.getBindGameObject()).update(new BlockDrop(ItemPrototype.STONE_SLAB, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BRICK_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.BRICK_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.TNT.getBindGameObject()).update(new BlockDrop(ItemPrototype.TNT, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BOOKSHELF.getBindGameObject()).update(new BlockDrop(ItemPrototype.BOOK, 3), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.MOSSY_COBBLESTONE.getBindGameObject()).update(new BlockDrop(ItemPrototype.MOSSY_COBBLESTONE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.OBSIDIAN.getBindGameObject()).update(new BlockDrop(ItemPrototype.OBSIDIAN, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.TORCH.getBindGameObject()).update(new BlockDrop(ItemPrototype.TORCH, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.FIRE.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.MOB_SPAWNER.getBindGameObject()).update(new BlockDrop(ItemPrototype.FIRE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.OAK_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.OAK_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CHEST.getBindGameObject()).update(new BlockDrop(ItemPrototype.CHEST, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.REDSTONE_WIRE.getBindGameObject()).update(new BlockDrop(ItemPrototype.REDSTONE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DIAMOND_ORE.getBindGameObject()).update(new BlockDrop(ItemPrototype.DIAMOND, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DIAMOND_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.DIAMOND_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CRAFTING_TABLE.getBindGameObject()).update(new BlockDrop(ItemPrototype.CRAFTING_TABLE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.WHEAT.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.FARMLAND.getBindGameObject()).update(new BlockDrop(ItemPrototype.DIRT, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.FURNACE.getBindGameObject()).update(new BlockDrop(ItemPrototype.FURNACE, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LIT_FURNACE.getBindGameObject()).update(new BlockDrop(ItemPrototype.FURNACE, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STANDING_SIGN.getBindGameObject()).update(new BlockDrop(ItemPrototype.SIGN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.WOODEN_DOOR.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LADDER.getBindGameObject()).update(new BlockDrop(ItemPrototype.LADDER, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.RAIL.getBindGameObject()).update(new BlockDrop(ItemPrototype.RAIL, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STONE_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.STONE_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.WALL_SIGN.getBindGameObject()).update(new BlockDrop(ItemPrototype.SIGN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LEVER.getBindGameObject()).update(new BlockDrop(ItemPrototype.LEVER, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STONE_PRESSURE_PLATE.getBindGameObject()).update(new BlockDrop(ItemPrototype.STONE_PRESSURE_PLATE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.IRON_DOOR.getBindGameObject()).update(new BlockDrop(ItemPrototype.IRON_DOOR, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.WOODEN_PRESSURE_PLATE.getBindGameObject()).update(new BlockDrop(ItemPrototype.WOODEN_PRESSURE_PLATE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.REDSTONE_ORE.getBindGameObject()).update(new BlockRangeDrop(ItemPrototype.REDSTONE, 4, 5), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LIT_REDSTONE_ORE.getBindGameObject()).update(new BlockRangeDrop(ItemPrototype.LIT_REDSTONE_ORE, 4, 5), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.UNLIT_REDSTONE_TORCH.getBindGameObject()).update(new BlockDrop(ItemPrototype.UNLIT_REDSTONE_TORCH, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.REDSTONE_TORCH.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STONE_BUTTON.getBindGameObject()).update(new BlockDrop(ItemPrototype.STONE_BUTTON, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SNOW_LAYER.getBindGameObject()).update(new BlockRangeDrop(ItemPrototype.SNOWBALL, 1, 8), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ICE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SNOW.getBindGameObject()).update(new BlockRangeDrop(ItemPrototype.SNOWBALL, 1, 8), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CACTUS.getBindGameObject()).update(new BlockDrop(ItemPrototype.CACTUS, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CLAY.getBindGameObject()).update(new BlockDrop(ItemPrototype.CLAY_BALL, 4), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.REEDS.getBindGameObject()).update(new BlockDrop(ItemPrototype.REEDS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.JUKEBOX.getBindGameObject()).update(new BlockDrop(ItemPrototype.JUKEBOX, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.FENCE.getBindGameObject()).update(new BlockDrop(ItemPrototype.FENCE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PUMPKIN.getBindGameObject()).update(new BlockDrop(ItemPrototype.PUMPKIN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.NETHERRACK.getBindGameObject()).update(new BlockDrop(ItemPrototype.NETHERRACK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SOUL_SAND.getBindGameObject()).update(new BlockDrop(ItemPrototype.SOUL_SAND, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GLOWSTONE.getBindGameObject()).update(new BlockRangeDrop(ItemPrototype.GLOWSTONE_DUST, 2, 4), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PORTAL.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LIT_PUMPKIN.getBindGameObject()).update(new BlockDrop(ItemPrototype.LIT_PUMPKIN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CAKE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.UNPOWERED_REPEATER.getBindGameObject()).update(new BlockDrop(ItemPrototype.UNPOWERED_REPEATER, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.POWERED_REPEATER.getBindGameObject()).update(new BlockDrop(ItemPrototype.UNPOWERED_REPEATER, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.INVISIBLEBEDROCK.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.TRAPDOOR.getBindGameObject()).update(new BlockDrop(ItemPrototype.TRAPDOOR, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.MONSTER_EGG.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STONEBRICK.getBindGameObject()).update(new BlockDrop(ItemPrototype.STONEBRICK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BROWN_MUSHROOM_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.BROWN_MUSHROOM_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.RED_MUSHROOM_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.RED_MUSHROOM_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.IRON_BARS.getBindGameObject()).update(new BlockDrop(ItemPrototype.IRON_BARS, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GLASS_PANE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.MELON_BLOCK.getBindGameObject()).update(new BlockRangeDrop(ItemPrototype.MELON, 3, 7), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PUMPKIN_STEM.getBindGameObject()).update(new BlockRangeDrop(ItemPrototype.PUMPKIN_SEEDS, 0, 3), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.MELON_STEM.getBindGameObject()).update(new BlockRangeDrop(ItemPrototype.MELON_SEEDS, 0, 3), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.VINE.getBindGameObject()).update(new BlockDrop(ItemPrototype.VINE, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.FENCE_GATE.getBindGameObject()).update(new BlockDrop(ItemPrototype.FENCE_GATE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BRICK_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.BRICK_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STONE_BRICK_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.STONE_BRICK_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.MYCELIUM.getBindGameObject()).update(new BlockDrop(ItemPrototype.DIRT, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.WATERLILY.getBindGameObject()).update(new BlockDrop(ItemPrototype.WATERLILY, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.NETHER_BRICK.getBindGameObject()).update(new BlockDrop(ItemPrototype.NETHER_BRICK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.NETHER_BRICK_FENCE.getBindGameObject()).update(new BlockDrop(ItemPrototype.NETHER_BRICK_FENCE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.NETHER_BRICK_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.NETHER_BRICK_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.NETHER_WART.getBindGameObject()).update(new BlockDrop(ItemPrototype.NETHER_WART_ITEM, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ENCHANTING_TABLE.getBindGameObject()).update(new BlockDrop(ItemPrototype.ENCHANTING_TABLE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BREWING_STAND.getBindGameObject()).update(new BlockDrop(ItemPrototype.BREWING_STAND, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CAULDRON.getBindGameObject()).update(new BlockDrop(ItemPrototype.CAULDRON_ITEM, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.END_PORTAL.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.END_PORTAL_FRAME.getBindGameObject()).update(new BlockDrop(ItemPrototype.END_PORTAL_FRAME, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.END_STONE.getBindGameObject()).update(new BlockDrop(ItemPrototype.END_STONE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DRAGON_EGG.getBindGameObject()).update(new BlockDrop(ItemPrototype.DRAGON_EGG, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.REDSTONE_LAMP.getBindGameObject()).update(new BlockDrop(ItemPrototype.REDSTONE_LAMP, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LIT_REDSTONE_LAMP.getBindGameObject()).update(new BlockDrop(ItemPrototype.LIT_REDSTONE_LAMP, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DROPPER.getBindGameObject()).update(new BlockDrop(ItemPrototype.DROPPER, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ACTIVATOR_RAIL.getBindGameObject()).update(new BlockDrop(ItemPrototype.ACTIVATOR_RAIL, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.COCOA.getBindGameObject()).update(new BlockDrop(ItemPrototype.DYE, 1, 3), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SANDSTONE_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.SANDSTONE_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.EMERALD_ORE.getBindGameObject()).update(new BlockDrop(ItemPrototype.EMERALD, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ENDER_CHEST.getBindGameObject()).update(new BlockDrop(ItemPrototype.ENDER_CHEST, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.TRIPWIRE_HOOK.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.TRIPWIRE.getBindGameObject()).update(new BlockDrop(ItemPrototype.STRING, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.EMERALD_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.EMERALD_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SPRUCE_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.SPRUCE_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BIRCH_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.BIRCH_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.JUNGLE_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.JUNGLE_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.COMMAND_BLOCK.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BEACON.getBindGameObject()).update(new BlockDrop(ItemPrototype.BEACON, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.COBBLESTONE_WALL.getBindGameObject()).update(new BlockDrop(ItemPrototype.COBBLESTONE_WALL, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.FLOWER_POT.getBindGameObject()).update(new BlockDrop(ItemPrototype.FLOWER_POT, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CARROTS.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.POTATOES.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.WOODEN_BUTTON.getBindGameObject()).update(new BlockDrop(ItemPrototype.WOODEN_BUTTON, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SKULL.getBindGameObject()).update(new BlockDrop(ItemPrototype.SKULL_ITEM, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ANVIL.getBindGameObject()).update(new BlockDrop(ItemPrototype.ANVIL, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.TRAPPED_CHEST.getBindGameObject()).update(new BlockDrop(ItemPrototype.TRAPPED_CHEST, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LIGHT_WEIGHTED_PRESSURE_PLATE.getBindGameObject()).update(new BlockDrop(ItemPrototype.LIGHT_WEIGHTED_PRESSURE_PLATE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.HEAVY_WEIGHTED_PRESSURE_PLATE.getBindGameObject()).update(new BlockDrop(ItemPrototype.HEAVY_WEIGHTED_PRESSURE_PLATE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.UNPOWERED_COMPARATOR.getBindGameObject()).update(new BlockDrop(ItemPrototype.UNPOWERED_COMPARATOR, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.POWERED_COMPARATOR.getBindGameObject()).update(new BlockDrop(ItemPrototype.UNPOWERED_COMPARATOR, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DAYLIGHT_DETECTOR.getBindGameObject()).update(new BlockDrop(ItemPrototype.DAYLIGHT_DETECTOR, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.REDSTONE_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.REDSTONE_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.QUARTZ_ORE.getBindGameObject()).update(new BlockDrop(ItemPrototype.QUARTZ, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.HOPPER.getBindGameObject()).update(new BlockDrop(ItemPrototype.HOPPER, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.QUARTZ_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.QUARTZ_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.QUARTZ_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.QUARTZ_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DOUBLE_WOODEN_SLAB.getBindGameObject()).update(new BlockDrop(ItemPrototype.WOODEN_SLAB, 2), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.WOODEN_SLAB.getBindGameObject()).update(new BlockDrop(ItemPrototype.WOODEN_SLAB, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STAINED_HARDENED_CLAY.getBindGameObject()).update(new BlockDrop(ItemPrototype.STAINED_HARDENED_CLAY, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STAINED_GLASS_PANE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LEAVES2.getBindGameObject()).update(new BlockProbabilityDrop(ItemPrototype.SAPLING, 0.1, -1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LOG2.getBindGameObject()).update(new BlockDrop(ItemPrototype.LOG2, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ACACIA_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.ACACIA_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DARK_OAK_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.DARK_OAK_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SLIME.getBindGameObject()).update(new BlockDrop(ItemPrototype.SLIME, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GLOW_STICK.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.IRON_TRAPDOOR.getBindGameObject()).update(new BlockDrop(ItemPrototype.IRON_TRAPDOOR, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PRISMARINE.getBindGameObject()).update(new BlockDrop(ItemPrototype.PRISMARINE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SEALANTERN.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.HAY_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.HAY_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CARPET.getBindGameObject()).update(new BlockDrop(ItemPrototype.CARPET, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.HARDENED_CLAY.getBindGameObject()).update(new BlockDrop(ItemPrototype.HARDENED_CLAY, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.COAL_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.COAL_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PACKED_ICE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DOUBLE_PLANT.getBindGameObject()).update(new BlockDrop(ItemPrototype.DOUBLE_PLANT, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STANDING_BANNER.getBindGameObject()).update(new BlockDrop(ItemPrototype.BANNER, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.WALL_BANNER.getBindGameObject()).update(new BlockDrop(ItemPrototype.BANNER, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DAYLIGHT_DETECTOR_INVERTED.getBindGameObject()).update(new BlockDrop(ItemPrototype.DAYLIGHT_DETECTOR_INVERTED, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.RED_SANDSTONE.getBindGameObject()).update(new BlockDrop(ItemPrototype.RED_SANDSTONE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.RED_SANDSTONE_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.RED_SANDSTONE_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DOUBLE_STONE_SLAB2.getBindGameObject()).update(new BlockDrop(ItemPrototype.STONE_SLAB2, 2), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STONE_SLAB2.getBindGameObject()).update(new BlockDrop(ItemPrototype.STONE_SLAB2, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SPRUCE_FENCE_GATE.getBindGameObject()).update(new BlockDrop(ItemPrototype.SPRUCE_FENCE_GATE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BIRCH_FENCE_GATE.getBindGameObject()).update(new BlockDrop(ItemPrototype.BIRCH_FENCE_GATE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.JUNGLE_FENCE_GATE.getBindGameObject()).update(new BlockDrop(ItemPrototype.JUNGLE_FENCE_GATE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DARK_OAK_FENCE_GATE.getBindGameObject()).update(new BlockDrop(ItemPrototype.DARK_OAK_FENCE_GATE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ACACIA_FENCE_GATE.getBindGameObject()).update(new BlockDrop(ItemPrototype.ACACIA_FENCE_GATE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.REPEATING_COMMAND_BLOCK.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CHAIN_COMMAND_BLOCK.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.HARD_GLASS_PANE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.HARD_STAINED_GLASS_PANE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CHEMICAL_HEAT.getBindGameObject()).update(new BlockDrop(ItemPrototype.CHEMICAL_HEAT, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SPRUCE_DOOR.getBindGameObject()).update(new BlockDrop(ItemPrototype.SPRUCE_DOOR, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BIRCH_DOOR.getBindGameObject()).update(new BlockDrop(ItemPrototype.BIRCH_DOOR, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.JUNGLE_DOOR.getBindGameObject()).update(new BlockDrop(ItemPrototype.JUNGLE_DOOR, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ACACIA_DOOR.getBindGameObject()).update(new BlockDrop(ItemPrototype.ACACIA_DOOR, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DARK_OAK_DOOR.getBindGameObject()).update(new BlockDrop(ItemPrototype.DARK_OAK_DOOR, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GRASS_PATH.getBindGameObject()).update(new BlockDrop(ItemPrototype.DIRT, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.FRAME.getBindGameObject()).update(new BlockDrop(ItemPrototype.FRAME, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CHORUS_FLOWER.getBindGameObject()).update(new BlockDrop(ItemPrototype.CHORUS_FLOWER, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PURPUR_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.PURPUR_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.COLORED_TORCH_RG.getBindGameObject()).update(new BlockDrop(ItemPrototype.COLORED_TORCH_RG, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PURPUR_STAIRS.getBindGameObject()).update(new BlockDrop(ItemPrototype.PURPUR_STAIRS, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.COLORED_TORCH_BP.getBindGameObject()).update(new BlockDrop(ItemPrototype.COLORED_TORCH_BP, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.UNDYED_SHULKER_BOX.getBindGameObject()).update(new BlockDrop(ItemPrototype.UNDYED_SHULKER_BOX, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.END_BRICKS.getBindGameObject()).update(new BlockDrop(ItemPrototype.END_BRICKS, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.FROSTED_ICE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.END_ROD.getBindGameObject()).update(new BlockDrop(ItemPrototype.END_ROD, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.END_GATEWAY.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.T_210.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.T_211.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.T_212.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.MAGMA.getBindGameObject()).update(new BlockDrop(ItemPrototype.MAGMA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.NETHER_WART_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.NETHER_WART_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.RED_NETHER_BRICK.getBindGameObject()).update(new BlockDrop(ItemPrototype.RED_NETHER_BRICK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BONE_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.BONE_BLOCK, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.T_217.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SHULKER_BOX.getBindGameObject()).update(new BlockDrop(ItemPrototype.SHULKER_BOX, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PURPLE_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.PURPLE_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.WHITE_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.WHITE_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ORANGE_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.ORANGE_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.MAGENTA_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.MAGENTA_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LIGHT_BLUE_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.LIGHT_BLUE_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.YELLOW_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.YELLOW_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LIME_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.LIME_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PINK_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.PINK_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GRAY_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.GRAY_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SILVER_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.SILVER_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CYAN_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.CYAN_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.MOD_ORE_PLACE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BLUE_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.BLUE_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BROWN_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.BROWN_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GREEN_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.GREEN_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.RED_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.RED_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BLACK_GLAZED_TERRACOTTA.getBindGameObject()).update(new BlockDrop(ItemPrototype.BLACK_GLAZED_TERRACOTTA, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CONCRETE.getBindGameObject()).update(new BlockDrop(ItemPrototype.CONCRETE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CONCRETEPOWDER.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CHEMISTRY_TABLE.getBindGameObject()).update(new BlockDrop(ItemPrototype.CHEMISTRY_TABLE, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.UNDERWATER_TORCH.getBindGameObject()).update(new BlockDrop(ItemPrototype.UNDERWATER_TORCH, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CHORUS_PLANT.getBindGameObject()).update(new BlockProbabilityDrop(ItemPrototype.CHORUS_PLANT, 0.2), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STAINED_GLASS.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.T_242.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PODZOL.getBindGameObject()).update(new BlockDrop(ItemPrototype.DIRT, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BEETROOT.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STONECUTTER.getBindGameObject()).update(new BlockDrop(ItemPrototype.STONECUTTER, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GLOWINGOBSIDIAN.getBindGameObject()).update(new BlockDrop(ItemPrototype.GLOWINGOBSIDIAN, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.NETHERREACTOR.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.INFO_UPDATE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.INFO_UPDATE2.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.MOVINGBLOCK.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.OBSERVER.getBindGameObject()).update(new BlockDrop(ItemPrototype.OBSERVER, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STRUCTURE_BLOCK.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.HARD_GLASS.getBindGameObject()).update(new BlockDrop(ItemPrototype.HARD_GLASS, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.HARD_STAINED_GLASS.getBindGameObject()).update(new BlockDrop(ItemPrototype.HARD_STAINED_GLASS, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.RESERVED6.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PRISMARINE_STAIRS.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DARK_PRISMARINE_STAIRS.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.PRISMARINE_BRICKS_STAIRS.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STRIPPED_SPRUCE_LOG.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STRIPPED_BIRCH_LOG.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STRIPPED_JUNGLE_LOG.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STRIPPED_ACACIA_LOG.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STRIPPED_DARK_OAK_LOG.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STRIPPED_OAK_LOG.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BLUE_ICE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_1.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_2.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_3.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_4.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_5.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_6.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_7.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_8.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_9.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_10.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_11.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_12.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_13.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_14.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_15.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_16.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_17.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_18.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_19.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_20.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_21.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_22.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_23.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_24.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_25.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_26.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_27.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_28.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_29.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_30.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_31.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_32.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_33.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_34.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_35.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_36.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_37.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_38.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_39.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_40.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_41.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_42.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_43.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_44.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_45.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_46.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_47.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_48.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_49.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_50.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_51.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_52.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_53.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_54.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_55.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_56.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_57.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_58.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_59.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_60.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_61.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_62.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_63.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_64.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_65.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_66.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_67.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_68.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_69.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_70.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_71.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_72.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_73.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_74.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_75.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_76.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_77.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_78.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_79.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_80.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_81.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_82.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_83.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_84.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_85.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_86.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_87.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_88.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_89.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_90.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_91.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_92.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_93.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_94.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_95.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_96.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_97.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_98.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_99.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_100.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_101.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_102.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_103.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_104.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_105.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_106.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_107.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_108.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_109.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_110.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_111.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_112.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_113.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_114.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_115.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_116.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_117.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ELEMENT_118.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SEAGRASS.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CORAL.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CORAL_BLOCK.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CORAL_FAN.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CORAL_FAN_DEAD.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CORAL_FAN_HANG.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CORAL_FAN_HANG2.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CORAL_FAN_HANG3.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.KELP.getBindGameObject()).update(new BlockDrop(ItemPrototype.KELP, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DRIED_KELP_BLOCK.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ACACIA_BUTTON.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BIRCH_BUTTON.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DARK_OAK_BUTTON.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.JUNGLE_BUTTON.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SPRUCE_BUTTON.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ACACIA_TRAPDOOR.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BIRCH_TRAPDOOR.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DARK_OAK_TRAPDOOR.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.JUNGLE_TRAPDOOR.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SPRUCE_TRAPDOOR.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ACACIA_PRESSURE_PLATE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BIRCH_PRESSURE_PLATE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DARK_OAK_PRESSURE_PLATE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.JUNGLE_PRESSURE_PLATE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SPRUCE_PRESSURE_PLATE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CARVED_PUMPKIN.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SEA_PICKLE.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CONDUIT.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.TURTLE_EGG.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BUBBLE_COLUMN.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BARRIER.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BAMBOO_SAPLING.getBindGameObject()).update(new BlockDrop(ItemPrototype.BAMBOO, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SCAFFOLDING.getBindGameObject()).update(new BlockDrop(ItemPrototype.SCAFFOLDING, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BAMBOO.getBindGameObject()).update(new BlockDrop(ItemPrototype.BAMBOO, 1), true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SPRUCE_STANDING_SIGN.getBindGameObject()).update(new BlockDrop(ItemPrototype.SPRUCE_SIGN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SPRUCE_WALL_SIGN.getBindGameObject()).update(new BlockDrop(ItemPrototype.SPRUCE_SIGN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SMOOTH_STONE.getBindGameObject()).update(new BlockDrop(ItemPrototype.SMOOTH_STONE, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.RED_NETHER_BRICKS_STAIRS.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SMOOTH_BRICKS_STAIRS.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BIRCH_STANDING_SIGN.getBindGameObject()).update(new BlockDrop(ItemPrototype.BIRCH_SIGN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BIRCH_WALL_SIGN.getBindGameObject()).update(new BlockDrop(ItemPrototype.BIRCH_SIGN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.JUNGLE_STANDING_SIGN.getBindGameObject()).update(new BlockDrop(ItemPrototype.JUNGLE_SIGN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.JUNGLE_WALL_SIGN.getBindGameObject()).update(new BlockDrop(ItemPrototype.JUNGLE_SIGN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ACACIA_STANDING_SIGN.getBindGameObject()).update(new BlockDrop(ItemPrototype.ACACIA_SIGN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.ACACIA_WALL_SIGN.getBindGameObject()).update(new BlockDrop(ItemPrototype.ACACIA_SIGN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DARKOAK_STANDING_SIGN.getBindGameObject()).update(new BlockDrop(ItemPrototype.DARKOAK_SIGN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.DARKOAK_WALL_SIGN.getBindGameObject()).update(new BlockDrop(ItemPrototype.DARKOAK_SIGN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LECTERN.getBindGameObject()).update(new BlockDrop(ItemPrototype.LECTERN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.GRINDSTONE.getBindGameObject()).update(new BlockDrop(ItemPrototype.GRINDSTONE, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BLAST_FURNACE.getBindGameObject()).update(new BlockDrop(ItemPrototype.BLAST_FURNACE, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.STONECUTTER_BLOCK.getBindGameObject()).update(new BlockDrop(ItemPrototype.STONECUTTER_BLOCK, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SMOKER.getBindGameObject()).update(new BlockDrop(ItemPrototype.SMOKER, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LIT_SMOKER.getBindGameObject()).update(new BlockDrop(ItemPrototype.LIT_SMOKER, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CARTOGRAPHY_TABLE.getBindGameObject()).update(new BlockDrop(ItemPrototype.CARTOGRAPHY_TABLE, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.FLETCHING_TABLE.getBindGameObject()).update(new BlockDrop(ItemPrototype.FLETCHING_TABLE, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SMITHING_TABLE.getBindGameObject()).update(new BlockDrop(ItemPrototype.SMITHING_TABLE, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BARREL.getBindGameObject()).update(new BlockDrop(ItemPrototype.BARREL, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LOOM.getBindGameObject()).update(new BlockDrop(ItemPrototype.LOOM, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.T_460.getBindGameObject()).update(null, true);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BELL.getBindGameObject()).update(new BlockDrop(ItemPrototype.BELL, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.SWEET_BERRY_BUSH.getBindGameObject()).update(new BlockDrop(ItemPrototype.SWEET_BERRY_BUSH, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LANTERN.getBindGameObject()).update(new BlockDrop(ItemPrototype.LANTERN, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.CAMPFIRE.getBindGameObject()).update(new BlockDrop(ItemPrototype.CAMPFIRE, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LAVA_CAULDRON.getBindGameObject()).update(new BlockDrop(ItemPrototype.LAVA_CAULDRON, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.JIGSAW.getBindGameObject()).update(new BlockDrop(ItemPrototype.JIGSAW, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.WOOD.getBindGameObject()).update(new BlockDrop(ItemPrototype.WOOD, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.COMPOSTER.getBindGameObject()).update(new BlockDrop(ItemPrototype.COMPOSTER, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.LIT_BLAST_FURNACE.getBindGameObject()).update(new BlockDrop(ItemPrototype.LIT_BLAST_FURNACE, 1), false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BEE_NEST.getBindGameObject()).update(null, false);
        BLOCK_DROP_MODULE_HANDLER.bindModule(BlockPrototype.BEEHIVE.getBindGameObject()).update(null, false);
    }

    public List<ItemStack> getBlockDrops(Block block) {
        BlockDropModule blockDropModule = BLOCK_DROP_MODULE_HANDLER.getModule(block.getType().getBindGameObject());
        if (blockDropModule == null) {
            return new LinkedList<>();
        }

        IBlockDrop blockDrop = blockDropModule.getBlockDrop();
        if (blockDrop == null) {
            return new LinkedList<>();
        }

        List<ItemStack> drops = null;
        if (blockDropModule.isKeepMetaData()) {
            drops = blockDrop.getDrops(block.getMeta());
        } else {
            drops = blockDrop.getDrops(0);
        }
        return drops;
    }

    public boolean keepMetaData(Block block) {
        BlockDropModule blockDropModule = BLOCK_DROP_MODULE_HANDLER.getModule(block.getType().getBindGameObject());
        if (blockDropModule == null) {
            return false;
        }

        return blockDropModule.isKeepMetaData();
    }

}
